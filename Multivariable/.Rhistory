qnorm(0.005) #obtener z: alfa/2
z= qnorm(0.005) #obtener z: alfa/2
pHombres = 135.67 #equis barra
pMujeres = 68.64
sHombres = 35 #desviaciones estándar de las muestras
sMujeres = 20
nHombres = 40 #tamaños de muestra
nMujeres = 30
#intervalo
izq = (pHombres - pMujeres) - z * sqrt(sHombres^2/nhombres + sMujeres^2/nmujeres)
#intervalo
izq = (pHombres - pMujeres) - z * sqrt(sHombres^2/nHombres + sMujeres^2/nmujeres)
#intervalo
izq = (pHombres - pMujeres) - z * sqrt(sHombres^2/nHombres + sMujeres^2/nMujeres)
izq
der = (pHombres - pMujeres) + z * sqrt(sHombres^2/nHombres + sMujeres^2/nMujeres)
der
help("t.test")
t.test(privadas, publicas)
privadas = c(52.8  ,43.2 ,45.0 ,33.3 ,44.0, 30.6, 45.8, 37.8 ,50.5, 42.0)
publicas = c(20.3, 22.0 ,28.2, 15.6, 24.1, 28.5 ,22.8, 25.8, 18.5, 25.6, 14.4 ,21.8)
t.test(privadas, publicas)
qf(0.975,9, 11)
sd(privadas)
sd1
sd1= sd(privadas)
sd1
sd2= sd(publicas)
sd2
qf(0.025,9,11)
sd1^2/sd2^2
div= sd1^2/sd2^2
izq = qf(0.975,9, 11)
der = qf(0.025,9,11)
div= sd1^2/sd2^2
1/izq
1/der
extizq= 1/izq
extder= 1/der
extizq * div
izq = qf(0.975,9, 11)
der = qf(0.025,9,11)
div= sd1^2/sd2^2
extizq= 1/izq
extder= 1/der
extizq * div
1/izq *div
div
1/izq *div
1/der * div
mean(privadas)
meand(publicas)
mean(publicas)
#-----
qt(0.025,20) #qt(alfa/2, n1+n2-2)
sd1
sd2
sqrt(6.98^2 * 9 + 4.53^2* 11 / 10)
sqrt((6.98^2 * 9 + 4.53^2* 11) / 10)
#-----
t = qt(0.025,20) #qt(alfa/2, n1+n2-2)
sp = sqrt((6.98^2 * 9 + 4.53^2* 11) / 10)
(42.5 - 22.3) + t* sp * 11/60
(42.5 - 22.3) + t* sp * 0.1833
(42.5 - 22.3) - t* sp * 0.1833
faltas = c(0,2,6,8,3)
calif = c(95,100,75,60,85)
cor(faltas, calif)
qt(0.025, 9)
qt(0.025, 8)
qt(0.025, 3)
r = cor(faltas, calif)
r * sqrt(3/(1-r^2))
mate = c(540,432,528,574,448,502,480,499,610,572,390,593)
redac = c(474,380,463,612,420,526,430,459,615,541,335,613)
t.test(mate, redac)
defectuoso = c(10,15,35)
bueno = c(390,485,465)
J = data.frame(cbind(A,B, C))
J = data.frame(cbind(defectuoso, bueno))
J
A = c(10,490)
B = c(15, 485)
C = c(35, 465)
J = data.frame(cbind(A,B,C)
J
J = data.frame(cbind(A,B,C)
A = c(10,490)
B = c(15, 485)
C = c(35, 465)
A = c(10,490)
B = c(15, 485)
C = c(35, 465)
J = data.frame(cbind(A,B,C))
J
chisq.test(J)
pcruchico = 85.36 #equis barra
pcrugrande = 81.40
scruchico = 4.55 #desviaciones estándar de las muestras
scrugrnde = 3.97
ncruchico = 37 #tamaños de muestra
ncrugrandes = 33
z= qnorm(0.005)
#intervalo
ext1 = (pcruchico - pcrugrande) + z * sqrt(scruchico^2/ncruchico + scrugrnde^2/ncrugrandes)
ext1
ext2 = (pcruchico - pcrugrande) - z * sqrt(scruchico^2/ncruchico + scrugrnde^2/ncrugrandes)
ext2
delta = c(27,273)
united = c(39,261)
US = c(44,356)
J = data.frame(cbind(delta, united, US))
J
demorado = c(27,39,44)
tiempo = c(273,261,256)
J = data.frame(cbind(demorado, tiempo))
J
chisq.test(J)
delta = c(27,273)
united = c(39,261)
US = c(44,356)
J = data.frame(cbind(delta, united, US))
J
chisq.test(J)
t.test(mate, redac)
qnorm(0.025)
#----------
p1 = 55
p2 = 46
z= qnorm(0.025)
q1 = 1-p1
q2 = 1-p2
n1 = 440
n2 = 400
(p1-p2) + z * sqrt((p1*q1)/n1 + (p2*q2)/n2)
(p1-p2) + z * sqrt((p1*q1)/n1 + (p2*q2)/n2))
(p1-p2) + z * sqrt(p1*q1/n1 + p2*q2/n2)
q1
#----------
p1 = 0.55
p2 = 0.46
z= qnorm(0.025)
q1 = 1-p1
q2 = 1-p2
n1 = 440
n2 = 400
(p1-p2) + z * sqrt(p1*q1/n1 + p2*q2/n2)
(p1-p2) - z * sqrt(p1*q1/n1 + p2*q2/n2)
n1 = 400
(p1-p2) - z * sqrt(p1*q1/n1 + p2*q2/n2)
(p1-p2) + z * sqrt(p1*q1/n1 + p2*q2/n2)
install.packages("nortest")
require(nortest)
cars
shapiro.test(cars&speed)
shapiro.test(cars$speed)
ad.test(cars$dist)
shapiro.test(cars$dist)
qnorm(0.02)
prop.test(x=c(30, 20), n=c(50, 45),
alternative= "two.sided" , conf.level=0.95)
prop.test(x=c(30, 20), n=c(50, 45), conf.level=0.95)
#X-squared = 1.7172
#p-value = 0.1901
help("prop.test")
prop.test(x=c(30, 20), n=c(50, 45), conf.level=0.95, correct = FALSE)
library(tseries)
install.packages("tseries")
install.packages("fPortfolio")
knitr::opts_chunk$set(echo = TRUE)
library(tseries)
library(fPortfolio)
updateR()
install.packages("installr")
library(installr)
updateR()
install.packages("tseries")
writeLines('PATH="${RTOOLS40_HOME}\\usr\\bin;${PATH}"', con = "~/.Renviron")
knitr::opts_chunk$set(echo = TRUE)
library(tseries)
library(fPortfolio)
Indice<- get.hist.quote(instrument = "^GSPC",
start=as.Date("2010-01-04"),
end=as.Date("2021-01-31"), quote = "AdjClose")
plot(Indice, col="darkgreen", xlab="Fecha", ylab="AdjClose"); title(main="Evolución S&P 5OO")
summary(Indice)
knitr::opts_chunk$set(echo = TRUE)
library(tseries)
library(fPortfolio)
plot(Indice, col="darkgreen", xlab="Fecha", ylab="AdjClose"); title(main="Evolución S&P 5OO")
## Activo 1: The Home Depot, Inc
HD<- get.hist.quote(instrument = "HD",
start=as.Date("2010-01-04"),
end=as.Date("2021-01-31"), quote = "AdjClose")
plot(HD, col="darkgreen", xlab="Fecha", ylab="AdjClose"); title(main="Evolución Home Depot")
XOM<- get.hist.quote(instrument = "XOM",
start=as.Date("2010-01-04"),
end=as.Date("2021-01-31"), quote = "AdjClose")
plot(XOM, col="darkgreen", xlab="Fecha", ylab="AdjClose"); title(main="Evolución Exxon Mobil")
JNJ <- get.hist.quote(instrument = "JNJ",
start=as.Date("2010-01-04"),
end=as.Date("2021-01-31"), quote = "AdjClose")
plot(JNJ, col="darkgreen", xlab="Fecha", ylab="AdjClose"); title(main="Evolución Johnson & J")
AAPL<- get.hist.quote(instrument = "AAPL",
start=as.Date("2010-01-04"),
end=as.Date("2021-01-31"), quote = "AdjClose")
plot(AAPL, col="darkgreen", xlab="Fecha", ylab="AdjClose"); title(main="Evolución APPLE")
JPM <- get.hist.quote(instrument = "JPM",
start=as.Date("2010-01-04"),
end=as.Date("2021-01-31"), quote = "AdjClose")
plot(JPM, col="darkgreen", xlab="Fecha", ylab="AdjClose"); title(main="Evolución JP Morgan")
Cartera <- merge(AAPL,XOM,HD,JPM,JNJ, all = FALSE)
names(Cartera)<-c("AAPL", "XOM", "HD", "JPM", "JNJ")
plot(Cartera, main=" ", col="darkgreen", xlab="Fecha")
title(main="Evolución de la Cartera")
plot(Cartera, main=" ", col="darkgreen", xlab="Fecha")
RetornoIndice<-diff(log(Indice))
head(RetornoIndice,10)
plot(RetornoIndice, main=" ", col="darkgreen", xlab="Fecha", ylab="Rendimientos")
title(main="Rendimientos del Indice S&P 500")
plot(RetornoIndice, main=" ", col="darkgreen", xlab="Fecha", ylab="Rendimientos")
Rendimientos<-diff(log(Cartera))
plot(Rendimientos, main=" ", col="darkgreen", xlab="Fecha")
title(main="Rendimientos de la Cartera")
plot(Rendimientos, main=" ", col="darkgreen", xlab="Fecha")
plot(Rendimientos, main=" ", col="darkgreen", xlab="Fecha", title="rendimientos de la cartera")
plot(Rendimientos, main=" ", col="darkgreen", xlab="Fecha", tittle="rendimientos de la cartera")
plot(Rendimientos, main=" ", col="darkgreen", xlab="Fecha")
title(main="Rendimientos de la Cartera")
Rendimientos<-diff(log(Cartera))
plot(Rendimientos, main=" ", col="darkgreen", xlab="Fecha")
title(main="Rendimientos de la Cartera")
RetornoIndice<-diff(log(Indice))
head(RetornoIndice,10)
plot(RetornoIndice, main=" ", col="darkgreen", xlab="Fecha", ylab="Rendimientos")
title(main="Rendimientos del Indice S&P 500")
Cartera <- merge(AAPL,XOM,HD,JPM,JNJ, all = FALSE)
names(Cartera)<-c("AAPL", "XOM", "HD", "JPM", "JNJ")
plot(Cartera, main=" ", col="darkgreen", xlab="Fecha")
title(main="Evolución de la Cartera")
plot(RetornoIndice, main=" ", col="darkgreen", xlab="Fecha", ylab="Rendimientos")
title(main="Rendimientos del Indice S&P 500")
RendimientoPromedio = c(mean(RetornoIndice),mean(Rendimientos$AAPL),mean(Rendimientos$XOM),mean(Rendimientos$HD),mean(Rendimientos$JPM),mean(Rendimientos$JNJ))
Volatilidad = c(sd(RetornoIndice),sd(Rendimientos$AAPL),sd(Rendimientos$XOM),sd(Rendimientos$HD),sd(Rendimientos$JPM),sd(Rendimientos$JNJ) )
Tabla1 = data.frame (rbind(RendimientoPromedio,Volatilidad))
colnames(Tabla1)<- c("S&P500","AAPL", "XOM", "HD", "JPM", "JNJ")
Tabla1
View(Tabla1)
knitr::opts_chunk$set(echo = TRUE)
library(tseries)
library(tseries)
library(fPortfolio)
Indice<- get.hist.quote(instrument = "AMZN",
start=as.Date("2011-02-01"),
end=as.Date("2021-01-01"), quote = "AdjClose")
Indice<- get.hist.quote(instrument = "AMZN",
start=as.Date("2011-02-01"),
end=as.Date("2021-01-01"), quote = "AdjClose")
plot(Indice, col="darkgreen", xlab="Fecha", ylab="AdjClose"); title(main="Evolución S&P 5OO")
plot(Indice, col="darkgreen", xlab="Fecha", ylab="AdjClose"); title(main="Evolución AMZN")
```{r setup, include=FALSE}
library(tseries)
library(tseries)
library(fPortfolio)
Indice<- get.hist.quote(instrument = "^NDQ100",
start=as.Date("2011-02-01"),
end=as.Date("2021-01-01"), quote = "AdjClose")
plot(Indice, col="darkgreen", xlab="Fecha", ylab="AdjClose"); title(main="Evolución NASDAQ 100")
Indice<- get.hist.quote(instrument = "^NASDAQ100",
start=as.Date("2011-02-01"),
end=as.Date("2021-01-01"), quote = "AdjClose")
Indice<- get.hist.quote(instrument = "NASDAQ100",
start=as.Date("2011-02-01"),
end=as.Date("2021-01-01"), quote = "AdjClose")
Indice<- get.hist.quote(instrument = "^NASDAQ",
start=as.Date("2011-02-01"),
end=as.Date("2021-01-01"), quote = "AdjClose")
Indice<- get.hist.quote(instrument = "^NDX",
start=as.Date("2010-01-04"),
end=as.Date("2021-01-31"), quote = "AdjClose")
plot(Indice, col="darkgreen", xlab="Fecha", ylab="AdjClose"); title(main="Evolución S&P 5OO")
Indice<- get.hist.quote(instrument = "^NDX",
start=as.Date("2011-02-01"),
end=as.Date("2021-01-01"), quote = "AdjClose")
Indice<- get.hist.quote(instrument = "^NDX",
start=as.Date("2011-02-01"),
end=as.Date("2021-01-01"), quote = "AdjClose")
plot(Indice, col="darkgreen", xlab="Fecha", ylab="AdjClose"); title(main="Evolución NDQ 100")
HD<- get.hist.quote(instrument = "AMZN",
start=as.Date("2011-02-01"),
end=as.Date("2021-01-01"), quote = "AdjClose")
plot(HD, col="darkgreen", xlab="Fecha", ylab="AdjClose"); title(main="Evolución AMAZON")
XOM<- get.hist.quote(instrument = "CSCO",
start=as.Date("2011-02-01"),
end=as.Date("2021-01-01"), quote = "AdjClose")
plot(XOM, col="darkgreen", xlab="Fecha", ylab="AdjClose"); title(main="Evolución Cisco Systems")
AMZN<- get.hist.quote(instrument = "AMZN",
start=as.Date("2011-02-01"),
end=as.Date("2021-01-01"), quote = "AdjClose")
plot(HD, col="darkgreen", xlab="Fecha", ylab="AdjClose"); title(main="Evolución AMAZON")
AMZN<- get.hist.quote(instrument = "AMZN",
start=as.Date("2011-02-01"),
end=as.Date("2021-01-01"), quote = "AdjClose")
plot(AMZN, col="darkgreen", xlab="Fecha", ylab="AdjClose"); title(main="Evolución AMAZON")
CSCO<- get.hist.quote(instrument = "CSCO",
start=as.Date("2011-02-01"),
end=as.Date("2021-01-01"), quote = "AdjClose")
plot(CSCO, col="darkgreen", xlab="Fecha", ylab="AdjClose"); title(main="Evolución Cisco Systems")
MSFT <- get.hist.quote(instrument = "MSFT",
start=as.Date("2010-01-04"),
end=as.Date("2021-01-31"), quote = "AdjClose")
plot(MSFT, col="darkgreen", xlab="Fecha", ylab="AdjClose"); title(main="Evolución Microsoft Corporation")
MSFT <- get.hist.quote(instrument = "MSFT",
start=as.Date("2011-02-01"),
end=as.Date("2021-01-01"), quote = "AdjClose")
plot(MSFT, col="darkgreen", xlab="Fecha", ylab="AdjClose"); title(main="Evolución Microsoft Corporation")
NVDA<- get.hist.quote(instrument = "NVDA",
start=as.Date("2010-02-01"),
end=as.Date("2021-01-01"), quote = "AdjClose")
plot(NVDA, col="darkgreen", xlab="Fecha", ylab="AdjClose"); title(main="Evolución Nvidia Corporation")
NVDA<- get.hist.quote(instrument = "NVDA",
start=as.Date("2011-02-01"),
end=as.Date("2021-01-01"), quote = "AdjClose")
plot(NVDA, col="darkgreen", xlab="Fecha", ylab="AdjClose"); title(main="Evolución Nvidia Corporation")
TSLA <- get.hist.quote(instrument = "TSLA",
start=as.Date("2011-02-01"),
end=as.Date("2021-01-01"), quote = "AdjClose")
plot(TSLA, col="darkgreen", xlab="Fecha", ylab="AdjClose"); title(main="Evolución Tesla Motors")
Cartera <- merge(AMZN,CSCO,MSFT,NVDA,TSLA, all = FALSE)
names(Cartera)<-c("AMZN", "CSCO", "MSFT", "NVDA", "TSLA")
plot(Cartera, main=" ", col="darkgreen", xlab="Fecha")
title(main="Evolución de la Cartera")
Cartera <- merge(AMZN,CSCO,MSFT,NVDA,TSLA, all = FALSE)
names(Cartera)<-c("AMZN", "CSCO", "MSFT", "NVDA", "TSLA")
plot(Cartera, main=" ", col="darkgreen", xlab="Fecha")
Cartera <- merge(AMZN,CSCO,MSFT,NVDA,TSLA, all = FALSE)
names(Cartera)<-c("AMZN", "CSCO", "MSFT", "NVDA", "TSLA")
plot(Cartera, main=" ", col="darkgreen", xlab="Fecha")
title(main="Evolución de la Cartera")
RetornoIndice<-diff(log(Indice))
head(RetornoIndice,10)
plot(RetornoIndice, main=" ", col="darkgreen", xlab="Fecha", ylab="Rendimientos")
title(main="Rendimientos del Indice NASDAQ 100")
Rendimientos<-diff(log(Cartera))
plot(Rendimientos, main=" ", col="darkgreen", xlab="Fecha")
title(main="Rendimientos de la Cartera")
plot(RetornoIndice, main=" ", col="darkgreen", xlab="Fecha", ylab="Rendimientos")
title(main="Rendimientos del Indice NASDAQ 100")
RendimientoPromedio = c(mean(RetornoIndice),mean(Rendimientos$AMZN),mean(Rendimientos$CSCO),mean(Rendimientos$MSFT),mean(Rendimientos$NVDA),mean(Rendimientos$TSLA))
Volatilidad = c(sd(RetornoIndice),sd(Rendimientos$AMZN),sd(Rendimientos$CSCO),sd(Rendimientos$MSFT),sd(Rendimientos$NVDA),sd(Rendimientos$TSLA) )
Tabla1 = data.frame (rbind(RendimientoPromedio,Volatilidad))
colnames(Tabla1)<- c("NASDAQ100","AMZN", "CSCO", "MSFT", "NVDA", "TSLA")
Tabla1
View(Tabla1)
## Calculo la varianza (riesgo) de los activos individuales
var(RetornoIndice)*100
Cov <- cov(Rendimientos)*100
Cov
espcartera<-portfolioSpec()
setRiskFreeRate(espcartera)<- -0.001 ##Rentabilidad Activo Libre de Riesgo
setNFrontierPoints(espcartera) <- 20
constraints="LongOnly"
Frontera <- portfolioFrontier(as.timeSeries(Rendimientos),spec=espcartera,constraints )
Frontera
frontierPlot(Frontera)
grid()
tangencyPoints(Frontera, pch = 19, col = "red", cex=2)
tangencyLines(Frontera, col="darkgreen", pch=19, cex=2)
minvariancePoints(Frontera, col="blue", pch=19, cex=2)
monteCarloPoints(Frontera, mcSteps=500, col="green", cex=0.001)
efPortfolio <- efficientPortfolio(as.timeSeries(Rendimientos),espcartera,constraints)
efPortfolio
tgPortfolio <- tangencyPortfolio(as.timeSeries(Rendimientos),espcartera,constraints)
tgPortfolio
weightsPie(efPortfolio)
mtext(text = "Portafolio eficiente", side = 3, line = 1.5,font = 2, cex = 0.7, adj = 0)
weightsPie(tgPortfolio)
mtext(text = "Portafolio tangente", side = 3, line = 1.5,font = 2, cex = 0.7, adj = 0)
knitr::opts_chunk$set(echo = TRUE)
Indice<- get.hist.quote(instrument = "^NDX",
start=as.Date("2011-02-01"),
end=as.Date("2021-01-01"), quote = "AdjClose")
knitr::opts_chunk$set(echo = TRUE)
library(tseries)
library(fPortfolio)
Indice<- get.hist.quote(instrument = "^NDX",
start=as.Date("2011-02-01"),
end=as.Date("2021-01-01"), quote = "AdjClose")
plot(Indice, col="darkgreen", xlab="Fecha", ylab="AdjClose"); title(main="Evolución NDQ 100")
summary(Indice)
AMZN<- get.hist.quote(instrument = "AMZN",
start=as.Date("2011-02-01"),
end=as.Date("2021-01-01"), quote = "AdjClose")
plot(AMZN, col="darkgreen", xlab="Fecha", ylab="AdjClose"); title(main="Evolución AMAZON")
CSCO<- get.hist.quote(instrument = "CSCO",
start=as.Date("2011-02-01"),
end=as.Date("2021-01-01"), quote = "AdjClose")
plot(CSCO, col="darkgreen", xlab="Fecha", ylab="AdjClose"); title(main="Evolución Cisco Systems")
MSFT <- get.hist.quote(instrument = "MSFT",
start=as.Date("2011-02-01"),
end=as.Date("2021-01-01"), quote = "AdjClose")
plot(MSFT, col="darkgreen", xlab="Fecha", ylab="AdjClose"); title(main="Evolución Microsoft Corporation")
NVDA<- get.hist.quote(instrument = "NVDA",
start=as.Date("2011-02-01"),
end=as.Date("2021-01-01"), quote = "AdjClose")
plot(NVDA, col="darkgreen", xlab="Fecha", ylab="AdjClose"); title(main="Evolución Nvidia Corporation")
TSLA <- get.hist.quote(instrument = "TSLA",
start=as.Date("2011-02-01"),
end=as.Date("2021-01-01"), quote = "AdjClose")
plot(TSLA, col="darkgreen", xlab="Fecha", ylab="AdjClose"); title(main="Evolución Tesla Motors")
Cartera <- merge(AMZN,CSCO,MSFT,NVDA,TSLA, all = FALSE)
names(Cartera)<-c("AMZN", "CSCO", "MSFT", "NVDA", "TSLA")
plot(Cartera, main=" ", col="darkgreen", xlab="Fecha")
title(main="Evolución de la Cartera")
RetornoIndice<-diff(log(Indice))
head(RetornoIndice,10)
plot(RetornoIndice, main=" ", col="darkgreen", xlab="Fecha", ylab="Rendimientos")
title(main="Rendimientos del Indice NASDAQ 100")
Rendimientos<-diff(log(Cartera))
plot(Rendimientos, main=" ", col="darkgreen", xlab="Fecha")
title(main="Rendimientos de la Cartera")
plot(RetornoIndice, main=" ", col="darkgreen", xlab="Fecha", ylab="Rendimientos")
title(main="Rendimientos del Indice NASDAQ 100")
RendimientoPromedio = c(mean(RetornoIndice),mean(Rendimientos$AMZN),mean(Rendimientos$CSCO),mean(Rendimientos$MSFT),mean(Rendimientos$NVDA),mean(Rendimientos$TSLA))
Volatilidad = c(sd(RetornoIndice),sd(Rendimientos$AMZN),sd(Rendimientos$CSCO),sd(Rendimientos$MSFT),sd(Rendimientos$NVDA),sd(Rendimientos$TSLA) )
Tabla1 = data.frame (rbind(RendimientoPromedio,Volatilidad))
colnames(Tabla1)<- c("NASDAQ100","AMZN", "CSCO", "MSFT", "NVDA", "TSLA")
Tabla1
## Calculo la varianza (riesgo) de los activos individuales
var(RetornoIndice)*100
Cov <- cov(Rendimientos)*100
Cov
min(Cov)
Cov <- cov(Rendimientos)*100
Cov
min(Cov)
## Calculo la varianza (riesgo) de los activos individuales
var(RetornoIndice)*100
Rendimientos<-diff(log(Cartera))
plot(Rendimientos, main=" ", col="darkgreen", xlab="Fecha")
title(main="Rendimientos de la Cartera")
table(Rendimientos)
Rendimientos<-diff(log(Cartera))
plot(Rendimientos, main=" ", col="darkgreen", xlab="Fecha")
title(main="Rendimientos de la Cartera")
View(table(Rendimientos))
var(Rendimientos$AMZN)
Y1 <- var(Rendimientos$AMZN)
Y1 <- var(Rendimientos$AMZN)
Y1 <- var(Rendimientos$AMZN)
Y1
Y1 <- var(Rendimientos$AMZN)
Y1
Y2 <- var(Rendimientos$CSCO)
Y2
Y1 <- var(Rendimientos$AMZN)
Y1
Y2 <- var(Rendimientos$CSCO)
Y2
cov(Y1,Y2)
cov(Y1,Y2)
Y1 <- var(Rendimientos$AMZN)
Y1
Y2 <- var(Rendimientos$CSCO)
Y2
cov(Rendimientos$AMZN,Rendimientos$CSCO )
mean(Rendimientos$CSCO)
mean(Rendimientos$AMZN)
(0.3694)(0.0004074259) + (0.63059)(0.001178047)
(0.3694)*(0.0004074259) + (0.63059)*(0.001178047)
Frontera <- portfolioFrontier(as.timeSeries(Rendimientos$CSCO, Rendimientos$AMZN),spec=espcartera,constraints)
Frontera <- portfolioFrontier(as.timeSeries(Rendimientos$CSCO),spec=espcartera,constraints)
Frontera <- portfolioFrontier(as.timeSeries(Rendimientos),spec=espcartera,constraints)
Frontera
Frontera <- portfolioFrontier(as.timeSeries(Rendimientos$AMZN,Rendimientos$CSCO),spec=espcartera,constraints)
espcartera<-portfolioSpec()
setRiskFreeRate(espcartera)<- -0.001 ##Rentabilidad Activo Libre de Riesgo
setNFrontierPoints(espcartera) <- 20
constraints="LongOnly"
Frontera <- portfolioFrontier(as.timeSeries(Rendimientos),spec=espcartera,constraints )
Frontera
frontierPlot(Frontera)
grid()
tangencyPoints(Frontera, pch = 19, col = "red", cex=2)
tangencyLines(Frontera, col="darkgreen", pch=19, cex=2)
minvariancePoints(Frontera, col="blue", pch=19, cex=2)
monteCarloPoints(Frontera, mcSteps=500, col="green", cex=0.001)
(0.3694)^2*(0.0003930937)+(0.63059)^2*(0.0002842421)+2(0.3694*0.63059)*(0.000130293)
(0.3694^2)*(0.0003930937)+(0.63059^2)*(0.0002842421)+2(0.3694)*(0.63059)*(0.000130293)
(0.3694^2)*
(0.3694)^2
(0.3694)^2 *(0.0003930937)+(0.63059)^2*(0.0002842421)+2(0.3694)*(0.63059)*(0.000130293)
(0.3694)^2 * (0.0003930937)
(0.63059)^2*(0.0002842421)
2(0.3694)*(0.63059)*(0.000130293)
2*(0.3694)*(0.63059)*(0.000130293)
5.364014e-05 + 0.0001130271 + 6.070089e-05
(0.3694)^2 * (0.0003930937)+ (0.63059)^2*(0.0002842421) + 2*(0.3694)*(0.63059)*(0.000130293)
library(readxl)
Datos<-read_excel("DatosM.xlsx", sheet="2.1")
View(Datos)
View(Datos)
library(readxl)
Datos<-read_excel("DatosE.xlsx", sheet="datos")
library(readxl)
Datos<-read_excel("DatosE.xlsx", sheet="datos")
setwd("C:/Users/veron/OneDrive/Multivariante/Proyecto")
library(readxl)
Datos<-read_excel("DatosE.xlsx", sheet="datos")
library(readxl)
Datos<-read_excel("DatosEv.xlsx", sheet="datos")
